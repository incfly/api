// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: troubleshooting/v1alpha1/troubleshooting.proto

package v1alpha1

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	v1beta1 "istio.io/api/type/v1beta1"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Log level settings of proxy.
type LogLevel int32

const (
	LogLevel_OFF      LogLevel = 0
	LogLevel_CRITICAL LogLevel = 1
	LogLevel_ERROR    LogLevel = 2
	LogLevel_WARN     LogLevel = 3
	LogLevel_INFO     LogLevel = 4
	LogLevel_DEBUG    LogLevel = 5
	LogLevel_TRACE    LogLevel = 6
)

var LogLevel_name = map[int32]string{
	0: "OFF",
	1: "CRITICAL",
	2: "ERROR",
	3: "WARN",
	4: "INFO",
	5: "DEBUG",
	6: "TRACE",
}

var LogLevel_value = map[string]int32{
	"OFF":      0,
	"CRITICAL": 1,
	"ERROR":    2,
	"WARN":     3,
	"INFO":     4,
	"DEBUG":    5,
	"TRACE":    6,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{0}
}

// The type of the proxy runs as.
type ProxySelector_NodeType int32

const (
	// Runs as workload sidecar mode.
	ProxySelector_SIDECAR ProxySelector_NodeType = 0
	// Runs as gateway.
	ProxySelector_GATEWAY ProxySelector_NodeType = 1
)

var ProxySelector_NodeType_name = map[int32]string{
	0: "SIDECAR",
	1: "GATEWAY",
}

var ProxySelector_NodeType_value = map[string]int32{
	"SIDECAR": 0,
	"GATEWAY": 1,
}

func (x ProxySelector_NodeType) String() string {
	return proto.EnumName(ProxySelector_NodeType_name, int32(x))
}

func (ProxySelector_NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{0, 0}
}

// ProxySelector specifies the proxy filtering of the troubleshooting API targetted scope.
// All the fields in this selector are and-ed together. Empty fields will selector all the
// proxy.
type ProxySelector struct {
	// The types of the proxy runs as.
	Types []ProxySelector_NodeType `protobuf:"varint,1,rep,packed,name=types,proto3,enum=istio.troubleshooting.v1alpha1.ProxySelector_NodeType" json:"types,omitempty"`
	// The namespaces of the proxy reside in.
	Namespaces []string `protobuf:"bytes,2,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	// the names of the proxy to be selected. For Kubernetes, this is the pod id.
	Names []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	// Selector of proxy based on workload labels.
	Selector             *v1beta1.WorkloadSelector `protobuf:"bytes,4,opt,name=selector,proto3" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ProxySelector) Reset()         { *m = ProxySelector{} }
func (m *ProxySelector) String() string { return proto.CompactTextString(m) }
func (*ProxySelector) ProtoMessage()    {}
func (*ProxySelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{0}
}
func (m *ProxySelector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxySelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxySelector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxySelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxySelector.Merge(m, src)
}
func (m *ProxySelector) XXX_Size() int {
	return m.Size()
}
func (m *ProxySelector) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxySelector.DiscardUnknown(m)
}

var xxx_messageInfo_ProxySelector proto.InternalMessageInfo

func (m *ProxySelector) GetTypes() []ProxySelector_NodeType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *ProxySelector) GetNamespaces() []string {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

func (m *ProxySelector) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ProxySelector) GetSelector() *v1beta1.WorkloadSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

// GetConfigDumpRequest is the request of GetConfigDump.
type GetConfigDumpRequest struct {
	// Selector selects a subset of the proxies for troubleshooting.
	Selector             *ProxySelector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetConfigDumpRequest) Reset()         { *m = GetConfigDumpRequest{} }
func (m *GetConfigDumpRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigDumpRequest) ProtoMessage()    {}
func (*GetConfigDumpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{1}
}
func (m *GetConfigDumpRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigDumpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigDumpRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetConfigDumpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigDumpRequest.Merge(m, src)
}
func (m *GetConfigDumpRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigDumpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigDumpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigDumpRequest proto.InternalMessageInfo

func (m *GetConfigDumpRequest) GetSelector() *ProxySelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

// GetConfigDumpResponse is the request of GetConfigDump.
type GetConfigDumpResponse struct {
	// The actual configuration dump payload.
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigDumpResponse) Reset()         { *m = GetConfigDumpResponse{} }
func (m *GetConfigDumpResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigDumpResponse) ProtoMessage()    {}
func (*GetConfigDumpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{2}
}
func (m *GetConfigDumpResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetConfigDumpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetConfigDumpResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetConfigDumpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigDumpResponse.Merge(m, src)
}
func (m *GetConfigDumpResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetConfigDumpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigDumpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigDumpResponse proto.InternalMessageInfo

func (m *GetConfigDumpResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type LoggerLogLevel struct {
	// The name of the logger in proxy. For example, "upstream", "connection",
	// etc.
	// TODO(incfly): add validation annotation to ensure the logger name is one of
	// the supported logger.
	LoggerName string `protobuf:"bytes,1,opt,name=logger_name,json=loggerName,proto3" json:"logger_name,omitempty"`
	// The corresponding log level to be set.
	LogLevel             LogLevel `protobuf:"varint,2,opt,name=log_level,json=logLevel,proto3,enum=istio.troubleshooting.v1alpha1.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggerLogLevel) Reset()         { *m = LoggerLogLevel{} }
func (m *LoggerLogLevel) String() string { return proto.CompactTextString(m) }
func (*LoggerLogLevel) ProtoMessage()    {}
func (*LoggerLogLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{3}
}
func (m *LoggerLogLevel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoggerLogLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoggerLogLevel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoggerLogLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggerLogLevel.Merge(m, src)
}
func (m *LoggerLogLevel) XXX_Size() int {
	return m.Size()
}
func (m *LoggerLogLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggerLogLevel.DiscardUnknown(m)
}

var xxx_messageInfo_LoggerLogLevel proto.InternalMessageInfo

func (m *LoggerLogLevel) GetLoggerName() string {
	if m != nil {
		return m.LoggerName
	}
	return ""
}

func (m *LoggerLogLevel) GetLogLevel() LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return LogLevel_OFF
}

type SetLogLevelRequest struct {
	// Selector selects a subset of the proxies for troubleshooting.
	Selector *ProxySelector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// The log levels to be updated to.
	// Empty list means no change to the existing log level settings of the proxy.
	LoggerLevels         []*LoggerLogLevel `protobuf:"bytes,2,rep,name=logger_levels,json=loggerLevels,proto3" json:"logger_levels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetLogLevelRequest) Reset()         { *m = SetLogLevelRequest{} }
func (m *SetLogLevelRequest) String() string { return proto.CompactTextString(m) }
func (*SetLogLevelRequest) ProtoMessage()    {}
func (*SetLogLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{4}
}
func (m *SetLogLevelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetLogLevelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetLogLevelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetLogLevelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLogLevelRequest.Merge(m, src)
}
func (m *SetLogLevelRequest) XXX_Size() int {
	return m.Size()
}
func (m *SetLogLevelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLogLevelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetLogLevelRequest proto.InternalMessageInfo

func (m *SetLogLevelRequest) GetSelector() *ProxySelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *SetLogLevelRequest) GetLoggerLevels() []*LoggerLogLevel {
	if m != nil {
		return m.LoggerLevels
	}
	return nil
}

type SetLogLevelResponse struct {
	// ManagedNode managed_node = 1;
	LoggerLevels         []*LoggerLogLevel `protobuf:"bytes,2,rep,name=logger_levels,json=loggerLevels,proto3" json:"logger_levels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetLogLevelResponse) Reset()         { *m = SetLogLevelResponse{} }
func (m *SetLogLevelResponse) String() string { return proto.CompactTextString(m) }
func (*SetLogLevelResponse) ProtoMessage()    {}
func (*SetLogLevelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{5}
}
func (m *SetLogLevelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetLogLevelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetLogLevelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetLogLevelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLogLevelResponse.Merge(m, src)
}
func (m *SetLogLevelResponse) XXX_Size() int {
	return m.Size()
}
func (m *SetLogLevelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLogLevelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetLogLevelResponse proto.InternalMessageInfo

func (m *SetLogLevelResponse) GetLoggerLevels() []*LoggerLogLevel {
	if m != nil {
		return m.LoggerLevels
	}
	return nil
}

// Proxy level troubleshooting request.
type TroubleShootingRequest struct {
	// request_id is the the identifier for each troubleshooting session.
	RequestId uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// timeout specifies the timeout for the troubleshooting request.
	// We have to specify the timeout in the payload since request flow is reverse
	// direction of the actual gRPC service.
	Timeout *types.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are valid to be assigned to Request:
	//	*TroubleShootingRequest_ConfigDump
	//	*TroubleShootingRequest_SetLogLevel
	Request              isTroubleShootingRequest_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *TroubleShootingRequest) Reset()         { *m = TroubleShootingRequest{} }
func (m *TroubleShootingRequest) String() string { return proto.CompactTextString(m) }
func (*TroubleShootingRequest) ProtoMessage()    {}
func (*TroubleShootingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{6}
}
func (m *TroubleShootingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TroubleShootingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TroubleShootingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TroubleShootingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TroubleShootingRequest.Merge(m, src)
}
func (m *TroubleShootingRequest) XXX_Size() int {
	return m.Size()
}
func (m *TroubleShootingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TroubleShootingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TroubleShootingRequest proto.InternalMessageInfo

type isTroubleShootingRequest_Request interface {
	isTroubleShootingRequest_Request()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TroubleShootingRequest_ConfigDump struct {
	ConfigDump *GetConfigDumpRequest `protobuf:"bytes,1001,opt,name=config_dump,json=configDump,proto3,oneof"`
}
type TroubleShootingRequest_SetLogLevel struct {
	SetLogLevel *SetLogLevelResponse `protobuf:"bytes,1002,opt,name=set_log_level,json=setLogLevel,proto3,oneof"`
}

func (*TroubleShootingRequest_ConfigDump) isTroubleShootingRequest_Request()  {}
func (*TroubleShootingRequest_SetLogLevel) isTroubleShootingRequest_Request() {}

func (m *TroubleShootingRequest) GetRequest() isTroubleShootingRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *TroubleShootingRequest) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *TroubleShootingRequest) GetTimeout() *types.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *TroubleShootingRequest) GetConfigDump() *GetConfigDumpRequest {
	if x, ok := m.GetRequest().(*TroubleShootingRequest_ConfigDump); ok {
		return x.ConfigDump
	}
	return nil
}

func (m *TroubleShootingRequest) GetSetLogLevel() *SetLogLevelResponse {
	if x, ok := m.GetRequest().(*TroubleShootingRequest_SetLogLevel); ok {
		return x.SetLogLevel
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TroubleShootingRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TroubleShootingRequest_ConfigDump)(nil),
		(*TroubleShootingRequest_SetLogLevel)(nil),
	}
}

// Proxy level troubleshoot response.
type TroubleShootingResponse struct {
	// request_id ties this response to the original request with the same request_id.
	RequestId uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// If true, this is the last response for a given request_id. The response will be empty.
	LastResponseToRequest bool `protobuf:"varint,2,opt,name=last_response_to_request,json=lastResponseToRequest,proto3" json:"last_response_to_request,omitempty"`
	// Types that are valid to be assigned to Response:
	//	*TroubleShootingResponse_ConfigDump
	//	*TroubleShootingResponse_LogLevels
	Response             isTroubleShootingResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TroubleShootingResponse) Reset()         { *m = TroubleShootingResponse{} }
func (m *TroubleShootingResponse) String() string { return proto.CompactTextString(m) }
func (*TroubleShootingResponse) ProtoMessage()    {}
func (*TroubleShootingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9fca2f482bbaff3, []int{7}
}
func (m *TroubleShootingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TroubleShootingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TroubleShootingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TroubleShootingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TroubleShootingResponse.Merge(m, src)
}
func (m *TroubleShootingResponse) XXX_Size() int {
	return m.Size()
}
func (m *TroubleShootingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TroubleShootingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TroubleShootingResponse proto.InternalMessageInfo

type isTroubleShootingResponse_Response interface {
	isTroubleShootingResponse_Response()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TroubleShootingResponse_ConfigDump struct {
	ConfigDump *GetConfigDumpResponse `protobuf:"bytes,1001,opt,name=config_dump,json=configDump,proto3,oneof"`
}
type TroubleShootingResponse_LogLevels struct {
	LogLevels *SetLogLevelResponse `protobuf:"bytes,1002,opt,name=log_levels,json=logLevels,proto3,oneof"`
}

func (*TroubleShootingResponse_ConfigDump) isTroubleShootingResponse_Response() {}
func (*TroubleShootingResponse_LogLevels) isTroubleShootingResponse_Response()  {}

func (m *TroubleShootingResponse) GetResponse() isTroubleShootingResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TroubleShootingResponse) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *TroubleShootingResponse) GetLastResponseToRequest() bool {
	if m != nil {
		return m.LastResponseToRequest
	}
	return false
}

func (m *TroubleShootingResponse) GetConfigDump() *GetConfigDumpResponse {
	if x, ok := m.GetResponse().(*TroubleShootingResponse_ConfigDump); ok {
		return x.ConfigDump
	}
	return nil
}

func (m *TroubleShootingResponse) GetLogLevels() *SetLogLevelResponse {
	if x, ok := m.GetResponse().(*TroubleShootingResponse_LogLevels); ok {
		return x.LogLevels
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TroubleShootingResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TroubleShootingResponse_ConfigDump)(nil),
		(*TroubleShootingResponse_LogLevels)(nil),
	}
}

func init() {
	proto.RegisterEnum("istio.troubleshooting.v1alpha1.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterEnum("istio.troubleshooting.v1alpha1.ProxySelector_NodeType", ProxySelector_NodeType_name, ProxySelector_NodeType_value)
	proto.RegisterType((*ProxySelector)(nil), "istio.troubleshooting.v1alpha1.ProxySelector")
	proto.RegisterType((*GetConfigDumpRequest)(nil), "istio.troubleshooting.v1alpha1.GetConfigDumpRequest")
	proto.RegisterType((*GetConfigDumpResponse)(nil), "istio.troubleshooting.v1alpha1.GetConfigDumpResponse")
	proto.RegisterType((*LoggerLogLevel)(nil), "istio.troubleshooting.v1alpha1.LoggerLogLevel")
	proto.RegisterType((*SetLogLevelRequest)(nil), "istio.troubleshooting.v1alpha1.SetLogLevelRequest")
	proto.RegisterType((*SetLogLevelResponse)(nil), "istio.troubleshooting.v1alpha1.SetLogLevelResponse")
	proto.RegisterType((*TroubleShootingRequest)(nil), "istio.troubleshooting.v1alpha1.TroubleShootingRequest")
	proto.RegisterType((*TroubleShootingResponse)(nil), "istio.troubleshooting.v1alpha1.TroubleShootingResponse")
}

func init() {
	proto.RegisterFile("troubleshooting/v1alpha1/troubleshooting.proto", fileDescriptor_d9fca2f482bbaff3)
}

var fileDescriptor_d9fca2f482bbaff3 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0xcd, 0x8e, 0xe3, 0x44,
	0x10, 0x80, 0xd3, 0xf9, 0xd9, 0x38, 0xe5, 0xc9, 0xc8, 0x6a, 0x76, 0xc1, 0x64, 0x45, 0x88, 0xac,
	0x45, 0x8a, 0x90, 0xb0, 0x37, 0x0e, 0xec, 0x5e, 0xc9, 0xdf, 0xcc, 0x46, 0x0a, 0x19, 0xd4, 0xc9,
	0x32, 0xec, 0x5e, 0x2c, 0x27, 0xe9, 0xf5, 0x18, 0x9c, 0xb4, 0x71, 0x77, 0xa2, 0xc9, 0x8d, 0x0b,
	0x0f, 0xc1, 0x03, 0x70, 0x44, 0x5c, 0x78, 0x08, 0x8e, 0x3c, 0x02, 0x9a, 0x1b, 0xbc, 0x02, 0x17,
	0xe4, 0xbf, 0x6c, 0x32, 0xcc, 0x10, 0x32, 0xb0, 0xb7, 0xee, 0xaa, 0xae, 0xbf, 0xaf, 0xaa, 0x2c,
	0x83, 0x2e, 0x02, 0xb6, 0x9c, 0x78, 0x94, 0x5f, 0x30, 0x26, 0xdc, 0x85, 0x63, 0xac, 0x1a, 0xb6,
	0xe7, 0x5f, 0xd8, 0x0d, 0xe3, 0x9a, 0x42, 0xf7, 0x03, 0x26, 0x18, 0xae, 0xba, 0x5c, 0xb8, 0xec,
	0xba, 0x95, 0x9e, 0x5a, 0x55, 0xaa, 0x0e, 0x63, 0x8e, 0x47, 0x8d, 0xe8, 0xf5, 0x64, 0xf9, 0xca,
	0x98, 0x2d, 0x03, 0x5b, 0xb8, 0x6c, 0x11, 0xdb, 0x57, 0x1e, 0x8a, 0xb5, 0x4f, 0x8d, 0x55, 0x63,
	0x42, 0x85, 0xdd, 0x30, 0x38, 0xf5, 0xe8, 0x54, 0xb0, 0x20, 0x56, 0x6a, 0x7f, 0x22, 0x28, 0x7f,
	0x1e, 0xb0, 0xcb, 0xf5, 0x28, 0x91, 0xe3, 0x01, 0x14, 0x42, 0x03, 0xae, 0xa2, 0x5a, 0xae, 0x7e,
	0x6c, 0x3e, 0xd1, 0xff, 0x39, 0xbc, 0xbe, 0x63, 0xad, 0x0f, 0xd9, 0x8c, 0x8e, 0xd7, 0x3e, 0x25,
	0xb1, 0x13, 0x5c, 0x05, 0x58, 0xd8, 0x73, 0xca, 0x7d, 0x7b, 0x4a, 0xb9, 0x9a, 0xad, 0xe5, 0xea,
	0x25, 0xb2, 0x25, 0xc1, 0xf7, 0xa1, 0x10, 0xdd, 0xd4, 0x5c, 0xa4, 0x8a, 0x2f, 0xf8, 0x53, 0x90,
	0xd2, 0x3c, 0xd5, 0x7c, 0x0d, 0xd5, 0x65, 0xf3, 0x51, 0x9a, 0xc6, 0xda, 0xa7, 0x7a, 0x52, 0x8b,
	0x7e, 0xce, 0x82, 0xaf, 0x3d, 0x66, 0xcf, 0xd2, 0xe8, 0x64, 0x63, 0xa5, 0x3d, 0x02, 0x29, 0x4d,
	0x05, 0xcb, 0x50, 0x1c, 0xf5, 0xbb, 0xbd, 0x4e, 0x8b, 0x28, 0x99, 0xf0, 0x72, 0xda, 0x1a, 0xf7,
	0xce, 0x5b, 0x2f, 0x14, 0xa4, 0xd9, 0x70, 0xff, 0x94, 0x8a, 0x0e, 0x5b, 0xbc, 0x72, 0x9d, 0xee,
	0x72, 0xee, 0x13, 0xfa, 0xcd, 0x92, 0x72, 0x81, 0xfb, 0x5b, 0xf1, 0x51, 0x14, 0xff, 0xa3, 0x83,
	0x30, 0x6c, 0x25, 0xd2, 0x80, 0x07, 0xd7, 0x42, 0x70, 0x9f, 0x2d, 0x38, 0xc5, 0x2a, 0x14, 0x7d,
	0x7b, 0x1d, 0xa6, 0x1f, 0x85, 0x28, 0x91, 0xf4, 0xaa, 0x5d, 0xc2, 0xf1, 0x80, 0x39, 0x0e, 0x0d,
	0x06, 0xcc, 0x19, 0xd0, 0x15, 0xf5, 0xf0, 0xfb, 0x20, 0x7b, 0x91, 0xc4, 0x0a, 0xf9, 0x24, 0xef,
	0x21, 0x16, 0x0d, 0xed, 0x39, 0xc5, 0x3d, 0x28, 0x79, 0xcc, 0xb1, 0xbc, 0xf0, 0xb5, 0x9a, 0xad,
	0xa1, 0xfa, 0xb1, 0x59, 0xdf, 0x97, 0x71, 0xea, 0x9d, 0x48, 0x5e, 0x72, 0xd2, 0x7e, 0x46, 0x80,
	0x47, 0x54, 0x6c, 0x34, 0xff, 0x3b, 0x0e, 0x3c, 0x82, 0x72, 0x52, 0x49, 0x94, 0x6b, 0x3c, 0x12,
	0xb2, 0xa9, 0xff, 0x8b, 0x64, 0xb7, 0x80, 0x90, 0xa3, 0xd8, 0x49, 0x74, 0xe1, 0xda, 0x57, 0xf0,
	0xd6, 0x4e, 0xd6, 0x09, 0xe1, 0x37, 0x12, 0xeb, 0xc7, 0x2c, 0xbc, 0x3d, 0x8e, 0x2d, 0x47, 0x89,
	0x65, 0x8a, 0xe9, 0x3d, 0x80, 0x20, 0x3e, 0x5a, 0x6e, 0xdc, 0xd4, 0x3c, 0x29, 0x25, 0x92, 0xfe,
	0x0c, 0x37, 0xa1, 0x28, 0xdc, 0x39, 0x65, 0x4b, 0x11, 0x75, 0x48, 0x36, 0xdf, 0xd5, 0xe3, 0xcd,
	0xd5, 0xd3, 0xcd, 0xd5, 0xbb, 0xc9, 0xe6, 0x92, 0xf4, 0x25, 0xfe, 0x12, 0xe4, 0x69, 0x34, 0x3b,
	0xd6, 0x6c, 0x39, 0xf7, 0xd5, 0xdf, 0x8b, 0x91, 0xe5, 0xc7, 0xfb, 0x4a, 0xb8, 0x69, 0xaa, 0x9f,
	0x65, 0x08, 0x4c, 0x37, 0x42, 0xfc, 0x12, 0xca, 0x9c, 0x0a, 0xeb, 0xf5, 0xd8, 0xfc, 0x11, 0xfb,
	0x6e, 0xee, 0xf3, 0x7d, 0x03, 0xea, 0x67, 0x19, 0x22, 0xf3, 0xd7, 0xe2, 0x76, 0x09, 0x8a, 0x49,
	0xdd, 0xda, 0x4f, 0x59, 0x78, 0xe7, 0x6f, 0xbc, 0x92, 0x06, 0xed, 0x01, 0xf6, 0x14, 0x54, 0xcf,
	0xe6, 0xc2, 0x0a, 0x92, 0xf7, 0x96, 0x60, 0x56, 0xa2, 0x8d, 0x08, 0x4a, 0xe4, 0x41, 0xa8, 0x4f,
	0xdd, 0x8d, 0x59, 0xda, 0x88, 0x17, 0x37, 0x42, 0xfb, 0xe4, 0x40, 0x68, 0x9b, 0xd2, 0xb6, 0xa9,
	0x3d, 0x07, 0xd8, 0x10, 0xe3, 0xff, 0x11, 0x59, 0x29, 0xdd, 0x3b, 0xde, 0x06, 0x90, 0xd2, 0x2a,
	0x3f, 0xfc, 0x02, 0xa4, 0xcd, 0xe2, 0x17, 0x21, 0x77, 0x76, 0x72, 0xa2, 0x64, 0xf0, 0x11, 0x48,
	0x1d, 0xd2, 0x1f, 0xf7, 0x3b, 0xad, 0x81, 0x82, 0x70, 0x09, 0x0a, 0x3d, 0x42, 0xce, 0x88, 0x92,
	0xc5, 0x12, 0xe4, 0xcf, 0x5b, 0x64, 0xa8, 0xe4, 0xc2, 0x53, 0x7f, 0x78, 0x72, 0xa6, 0xe4, 0x43,
	0x75, 0xb7, 0xd7, 0x7e, 0x7e, 0xaa, 0x14, 0xc2, 0xe3, 0x98, 0xb4, 0x3a, 0x3d, 0xe5, 0x9e, 0xf9,
	0x7d, 0x16, 0x2a, 0x9f, 0x51, 0x7e, 0x31, 0xde, 0xcd, 0x72, 0x44, 0x83, 0x95, 0x3b, 0xa5, 0xf8,
	0x5b, 0x04, 0xe5, 0x1d, 0x02, 0xf8, 0x4e, 0x53, 0x56, 0xb9, 0x1b, 0x66, 0x2d, 0xf3, 0x18, 0xe1,
	0x4b, 0x90, 0xb7, 0x48, 0x61, 0xf3, 0x20, 0xac, 0x71, 0xf4, 0xbb, 0xb4, 0x42, 0xcb, 0x98, 0x3f,
	0x20, 0x78, 0x18, 0x7d, 0xb2, 0x6e, 0x81, 0xf3, 0x1d, 0x82, 0xa3, 0x6d, 0x15, 0x7e, 0xba, 0x2f,
	0xce, 0x2d, 0x33, 0x5f, 0x79, 0x72, 0xb0, 0x61, 0xbc, 0x47, 0x99, 0x3a, 0x7a, 0x8c, 0xda, 0xcd,
	0x5f, 0xae, 0xaa, 0xe8, 0xd7, 0xab, 0x2a, 0xfa, 0xed, 0xaa, 0x8a, 0x5e, 0x7e, 0x10, 0xbb, 0x72,
	0x99, 0x61, 0xfb, 0xae, 0x71, 0xdb, 0x6f, 0xc5, 0xe4, 0x5e, 0xf4, 0x7d, 0x69, 0xfe, 0x15, 0x00,
	0x00, 0xff, 0xff, 0xfd, 0x34, 0x07, 0xd0, 0x79, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MeshTroubleshootingServiceClient is the client API for MeshTroubleshootingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeshTroubleshootingServiceClient interface {
	// GetConfigDump gets the configuration dump of the proxy.
	GetConfigDump(ctx context.Context, in *GetConfigDumpRequest, opts ...grpc.CallOption) (MeshTroubleshootingService_GetConfigDumpClient, error)
	// Set the proxy log level.
	SetLogLevel(ctx context.Context, in *SetLogLevelRequest, opts ...grpc.CallOption) (*SetLogLevelResponse, error)
}

type meshTroubleshootingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMeshTroubleshootingServiceClient(cc *grpc.ClientConn) MeshTroubleshootingServiceClient {
	return &meshTroubleshootingServiceClient{cc}
}

func (c *meshTroubleshootingServiceClient) GetConfigDump(ctx context.Context, in *GetConfigDumpRequest, opts ...grpc.CallOption) (MeshTroubleshootingService_GetConfigDumpClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MeshTroubleshootingService_serviceDesc.Streams[0], "/istio.troubleshooting.v1alpha1.MeshTroubleshootingService/GetConfigDump", opts...)
	if err != nil {
		return nil, err
	}
	x := &meshTroubleshootingServiceGetConfigDumpClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MeshTroubleshootingService_GetConfigDumpClient interface {
	Recv() (*GetConfigDumpResponse, error)
	grpc.ClientStream
}

type meshTroubleshootingServiceGetConfigDumpClient struct {
	grpc.ClientStream
}

func (x *meshTroubleshootingServiceGetConfigDumpClient) Recv() (*GetConfigDumpResponse, error) {
	m := new(GetConfigDumpResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *meshTroubleshootingServiceClient) SetLogLevel(ctx context.Context, in *SetLogLevelRequest, opts ...grpc.CallOption) (*SetLogLevelResponse, error) {
	out := new(SetLogLevelResponse)
	err := c.cc.Invoke(ctx, "/istio.troubleshooting.v1alpha1.MeshTroubleshootingService/SetLogLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeshTroubleshootingServiceServer is the server API for MeshTroubleshootingService service.
type MeshTroubleshootingServiceServer interface {
	// GetConfigDump gets the configuration dump of the proxy.
	GetConfigDump(*GetConfigDumpRequest, MeshTroubleshootingService_GetConfigDumpServer) error
	// Set the proxy log level.
	SetLogLevel(context.Context, *SetLogLevelRequest) (*SetLogLevelResponse, error)
}

// UnimplementedMeshTroubleshootingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeshTroubleshootingServiceServer struct {
}

func (*UnimplementedMeshTroubleshootingServiceServer) GetConfigDump(req *GetConfigDumpRequest, srv MeshTroubleshootingService_GetConfigDumpServer) error {
	return status.Errorf(codes.Unimplemented, "method GetConfigDump not implemented")
}
func (*UnimplementedMeshTroubleshootingServiceServer) SetLogLevel(ctx context.Context, req *SetLogLevelRequest) (*SetLogLevelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLogLevel not implemented")
}

func RegisterMeshTroubleshootingServiceServer(s *grpc.Server, srv MeshTroubleshootingServiceServer) {
	s.RegisterService(&_MeshTroubleshootingService_serviceDesc, srv)
}

func _MeshTroubleshootingService_GetConfigDump_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetConfigDumpRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MeshTroubleshootingServiceServer).GetConfigDump(m, &meshTroubleshootingServiceGetConfigDumpServer{stream})
}

type MeshTroubleshootingService_GetConfigDumpServer interface {
	Send(*GetConfigDumpResponse) error
	grpc.ServerStream
}

type meshTroubleshootingServiceGetConfigDumpServer struct {
	grpc.ServerStream
}

func (x *meshTroubleshootingServiceGetConfigDumpServer) Send(m *GetConfigDumpResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MeshTroubleshootingService_SetLogLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLogLevelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshTroubleshootingServiceServer).SetLogLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/istio.troubleshooting.v1alpha1.MeshTroubleshootingService/SetLogLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshTroubleshootingServiceServer).SetLogLevel(ctx, req.(*SetLogLevelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeshTroubleshootingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "istio.troubleshooting.v1alpha1.MeshTroubleshootingService",
	HandlerType: (*MeshTroubleshootingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLogLevel",
			Handler:    _MeshTroubleshootingService_SetLogLevel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetConfigDump",
			Handler:       _MeshTroubleshootingService_GetConfigDump_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "troubleshooting/v1alpha1/troubleshooting.proto",
}

// ProxyTroubleshootingServiceClient is the client API for ProxyTroubleshootingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyTroubleshootingServiceClient interface {
	// TroubleShooting request on proxy level.
	// Note in the actual architecture, we have proxy level agent, e.g. pilot agent, connecting to the
	// centralized troubleshooting control plane. Thus from gRPC's point of view, centralized control
	// plane is the server. But when troubleshooting API is used, the control plane initiates
	// workflow. This is why we have response/request in reversed position.
	Troubleshoot(ctx context.Context, opts ...grpc.CallOption) (ProxyTroubleshootingService_TroubleshootClient, error)
}

type proxyTroubleshootingServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyTroubleshootingServiceClient(cc *grpc.ClientConn) ProxyTroubleshootingServiceClient {
	return &proxyTroubleshootingServiceClient{cc}
}

func (c *proxyTroubleshootingServiceClient) Troubleshoot(ctx context.Context, opts ...grpc.CallOption) (ProxyTroubleshootingService_TroubleshootClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProxyTroubleshootingService_serviceDesc.Streams[0], "/istio.troubleshooting.v1alpha1.ProxyTroubleshootingService/Troubleshoot", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyTroubleshootingServiceTroubleshootClient{stream}
	return x, nil
}

type ProxyTroubleshootingService_TroubleshootClient interface {
	Send(*TroubleShootingResponse) error
	Recv() (*TroubleShootingRequest, error)
	grpc.ClientStream
}

type proxyTroubleshootingServiceTroubleshootClient struct {
	grpc.ClientStream
}

func (x *proxyTroubleshootingServiceTroubleshootClient) Send(m *TroubleShootingResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyTroubleshootingServiceTroubleshootClient) Recv() (*TroubleShootingRequest, error) {
	m := new(TroubleShootingRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProxyTroubleshootingServiceServer is the server API for ProxyTroubleshootingService service.
type ProxyTroubleshootingServiceServer interface {
	// TroubleShooting request on proxy level.
	// Note in the actual architecture, we have proxy level agent, e.g. pilot agent, connecting to the
	// centralized troubleshooting control plane. Thus from gRPC's point of view, centralized control
	// plane is the server. But when troubleshooting API is used, the control plane initiates
	// workflow. This is why we have response/request in reversed position.
	Troubleshoot(ProxyTroubleshootingService_TroubleshootServer) error
}

// UnimplementedProxyTroubleshootingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyTroubleshootingServiceServer struct {
}

func (*UnimplementedProxyTroubleshootingServiceServer) Troubleshoot(srv ProxyTroubleshootingService_TroubleshootServer) error {
	return status.Errorf(codes.Unimplemented, "method Troubleshoot not implemented")
}

func RegisterProxyTroubleshootingServiceServer(s *grpc.Server, srv ProxyTroubleshootingServiceServer) {
	s.RegisterService(&_ProxyTroubleshootingService_serviceDesc, srv)
}

func _ProxyTroubleshootingService_Troubleshoot_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyTroubleshootingServiceServer).Troubleshoot(&proxyTroubleshootingServiceTroubleshootServer{stream})
}

type ProxyTroubleshootingService_TroubleshootServer interface {
	Send(*TroubleShootingRequest) error
	Recv() (*TroubleShootingResponse, error)
	grpc.ServerStream
}

type proxyTroubleshootingServiceTroubleshootServer struct {
	grpc.ServerStream
}

func (x *proxyTroubleshootingServiceTroubleshootServer) Send(m *TroubleShootingRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyTroubleshootingServiceTroubleshootServer) Recv() (*TroubleShootingResponse, error) {
	m := new(TroubleShootingResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ProxyTroubleshootingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "istio.troubleshooting.v1alpha1.ProxyTroubleshootingService",
	HandlerType: (*ProxyTroubleshootingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Troubleshoot",
			Handler:       _ProxyTroubleshootingService_Troubleshoot_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "troubleshooting/v1alpha1/troubleshooting.proto",
}

func (m *ProxySelector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxySelector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxySelector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Selector != nil {
		{
			size, err := m.Selector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Names) > 0 {
		for iNdEx := len(m.Names) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Names[iNdEx])
			copy(dAtA[i:], m.Names[iNdEx])
			i = encodeVarintTroubleshooting(dAtA, i, uint64(len(m.Names[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Namespaces) > 0 {
		for iNdEx := len(m.Namespaces) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Namespaces[iNdEx])
			copy(dAtA[i:], m.Namespaces[iNdEx])
			i = encodeVarintTroubleshooting(dAtA, i, uint64(len(m.Namespaces[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Types) > 0 {
		dAtA3 := make([]byte, len(m.Types)*10)
		var j2 int
		for _, num := range m.Types {
			for num >= 1<<7 {
				dAtA3[j2] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j2++
			}
			dAtA3[j2] = uint8(num)
			j2++
		}
		i -= j2
		copy(dAtA[i:], dAtA3[:j2])
		i = encodeVarintTroubleshooting(dAtA, i, uint64(j2))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetConfigDumpRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigDumpRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetConfigDumpRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Selector != nil {
		{
			size, err := m.Selector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetConfigDumpResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetConfigDumpResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetConfigDumpResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Payload) > 0 {
		i -= len(m.Payload)
		copy(dAtA[i:], m.Payload)
		i = encodeVarintTroubleshooting(dAtA, i, uint64(len(m.Payload)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LoggerLogLevel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoggerLogLevel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoggerLogLevel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LogLevel != 0 {
		i = encodeVarintTroubleshooting(dAtA, i, uint64(m.LogLevel))
		i--
		dAtA[i] = 0x10
	}
	if len(m.LoggerName) > 0 {
		i -= len(m.LoggerName)
		copy(dAtA[i:], m.LoggerName)
		i = encodeVarintTroubleshooting(dAtA, i, uint64(len(m.LoggerName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetLogLevelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetLogLevelRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetLogLevelRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LoggerLevels) > 0 {
		for iNdEx := len(m.LoggerLevels) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LoggerLevels[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Selector != nil {
		{
			size, err := m.Selector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetLogLevelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetLogLevelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetLogLevelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LoggerLevels) > 0 {
		for iNdEx := len(m.LoggerLevels) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LoggerLevels[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *TroubleShootingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TroubleShootingRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TroubleShootingRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Request != nil {
		{
			size := m.Request.Size()
			i -= size
			if _, err := m.Request.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Timeout != nil {
		{
			size, err := m.Timeout.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RequestId != 0 {
		i = encodeVarintTroubleshooting(dAtA, i, uint64(m.RequestId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TroubleShootingRequest_ConfigDump) MarshalTo(dAtA []byte) (int, error) {
	return m.MarshalToSizedBuffer(dAtA[:m.Size()])
}

func (m *TroubleShootingRequest_ConfigDump) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ConfigDump != nil {
		{
			size, err := m.ConfigDump.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *TroubleShootingRequest_SetLogLevel) MarshalTo(dAtA []byte) (int, error) {
	return m.MarshalToSizedBuffer(dAtA[:m.Size()])
}

func (m *TroubleShootingRequest_SetLogLevel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SetLogLevel != nil {
		{
			size, err := m.SetLogLevel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *TroubleShootingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TroubleShootingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TroubleShootingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Response != nil {
		{
			size := m.Response.Size()
			i -= size
			if _, err := m.Response.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.LastResponseToRequest {
		i--
		if m.LastResponseToRequest {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.RequestId != 0 {
		i = encodeVarintTroubleshooting(dAtA, i, uint64(m.RequestId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TroubleShootingResponse_ConfigDump) MarshalTo(dAtA []byte) (int, error) {
	return m.MarshalToSizedBuffer(dAtA[:m.Size()])
}

func (m *TroubleShootingResponse_ConfigDump) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ConfigDump != nil {
		{
			size, err := m.ConfigDump.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *TroubleShootingResponse_LogLevels) MarshalTo(dAtA []byte) (int, error) {
	return m.MarshalToSizedBuffer(dAtA[:m.Size()])
}

func (m *TroubleShootingResponse_LogLevels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LogLevels != nil {
		{
			size, err := m.LogLevels.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTroubleshooting(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func encodeVarintTroubleshooting(dAtA []byte, offset int, v uint64) int {
	offset -= sovTroubleshooting(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProxySelector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Types) > 0 {
		l = 0
		for _, e := range m.Types {
			l += sovTroubleshooting(uint64(e))
		}
		n += 1 + sovTroubleshooting(uint64(l)) + l
	}
	if len(m.Namespaces) > 0 {
		for _, s := range m.Namespaces {
			l = len(s)
			n += 1 + l + sovTroubleshooting(uint64(l))
		}
	}
	if len(m.Names) > 0 {
		for _, s := range m.Names {
			l = len(s)
			n += 1 + l + sovTroubleshooting(uint64(l))
		}
	}
	if m.Selector != nil {
		l = m.Selector.Size()
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetConfigDumpRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Selector != nil {
		l = m.Selector.Size()
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetConfigDumpResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Payload)
	if l > 0 {
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoggerLogLevel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LoggerName)
	if l > 0 {
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if m.LogLevel != 0 {
		n += 1 + sovTroubleshooting(uint64(m.LogLevel))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetLogLevelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Selector != nil {
		l = m.Selector.Size()
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if len(m.LoggerLevels) > 0 {
		for _, e := range m.LoggerLevels {
			l = e.Size()
			n += 1 + l + sovTroubleshooting(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetLogLevelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LoggerLevels) > 0 {
		for _, e := range m.LoggerLevels {
			l = e.Size()
			n += 1 + l + sovTroubleshooting(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TroubleShootingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestId != 0 {
		n += 1 + sovTroubleshooting(uint64(m.RequestId))
	}
	if m.Timeout != nil {
		l = m.Timeout.Size()
		n += 1 + l + sovTroubleshooting(uint64(l))
	}
	if m.Request != nil {
		n += m.Request.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TroubleShootingRequest_ConfigDump) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfigDump != nil {
		l = m.ConfigDump.Size()
		n += 2 + l + sovTroubleshooting(uint64(l))
	}
	return n
}
func (m *TroubleShootingRequest_SetLogLevel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SetLogLevel != nil {
		l = m.SetLogLevel.Size()
		n += 2 + l + sovTroubleshooting(uint64(l))
	}
	return n
}
func (m *TroubleShootingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestId != 0 {
		n += 1 + sovTroubleshooting(uint64(m.RequestId))
	}
	if m.LastResponseToRequest {
		n += 2
	}
	if m.Response != nil {
		n += m.Response.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TroubleShootingResponse_ConfigDump) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfigDump != nil {
		l = m.ConfigDump.Size()
		n += 2 + l + sovTroubleshooting(uint64(l))
	}
	return n
}
func (m *TroubleShootingResponse_LogLevels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LogLevels != nil {
		l = m.LogLevels.Size()
		n += 2 + l + sovTroubleshooting(uint64(l))
	}
	return n
}

func sovTroubleshooting(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTroubleshooting(x uint64) (n int) {
	return sovTroubleshooting(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProxySelector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxySelector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxySelector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v ProxySelector_NodeType
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTroubleshooting
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= ProxySelector_NodeType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Types = append(m.Types, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTroubleshooting
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTroubleshooting
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTroubleshooting
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.Types) == 0 {
					m.Types = make([]ProxySelector_NodeType, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v ProxySelector_NodeType
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTroubleshooting
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= ProxySelector_NodeType(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Types = append(m.Types, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespaces", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespaces = append(m.Namespaces, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Names", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Names = append(m.Names, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Selector == nil {
				m.Selector = &v1beta1.WorkloadSelector{}
			}
			if err := m.Selector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetConfigDumpRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigDumpRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigDumpRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Selector == nil {
				m.Selector = &ProxySelector{}
			}
			if err := m.Selector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetConfigDumpResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetConfigDumpResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetConfigDumpResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payload = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoggerLogLevel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoggerLogLevel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoggerLogLevel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoggerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoggerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
			}
			m.LogLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LogLevel |= LogLevel(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetLogLevelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetLogLevelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetLogLevelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Selector == nil {
				m.Selector = &ProxySelector{}
			}
			if err := m.Selector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoggerLevels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoggerLevels = append(m.LoggerLevels, &LoggerLogLevel{})
			if err := m.LoggerLevels[len(m.LoggerLevels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetLogLevelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetLogLevelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetLogLevelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoggerLevels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoggerLevels = append(m.LoggerLevels, &LoggerLogLevel{})
			if err := m.LoggerLevels[len(m.LoggerLevels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TroubleShootingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TroubleShootingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TroubleShootingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			m.RequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Timeout == nil {
				m.Timeout = &types.Duration{}
			}
			if err := m.Timeout.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigDump", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetConfigDumpRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &TroubleShootingRequest_ConfigDump{v}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetLogLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SetLogLevelResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &TroubleShootingRequest_SetLogLevel{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TroubleShootingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TroubleShootingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TroubleShootingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			m.RequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastResponseToRequest", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastResponseToRequest = bool(v != 0)
		case 1001:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigDump", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetConfigDumpResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Response = &TroubleShootingResponse_ConfigDump{v}
			iNdEx = postIndex
		case 1002:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogLevels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SetLogLevelResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Response = &TroubleShootingResponse_LogLevels{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTroubleshooting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTroubleshooting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTroubleshooting(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTroubleshooting
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTroubleshooting
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTroubleshooting
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthTroubleshooting
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTroubleshooting
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTroubleshooting(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthTroubleshooting
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTroubleshooting = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTroubleshooting   = fmt.Errorf("proto: integer overflow")
)
